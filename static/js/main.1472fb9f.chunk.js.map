{"version":3,"sources":["actions/UsersActions.js","reducers/users.js","actions/AlbumsActions.js","reducers/albums.js","reducers/index.js","store/configureStore.js","components/Users.js","containers/UsersContainer.js","components/Albums.js","containers/AlbumsContainer.js","components/Photos.js","containers/PhotosContainer.js","components/NotFound.js","components/App.js","registerServiceWorker.js","index.js"],"names":["GET_USERS_REQUEST","GET_USERS_SUCCESS","GET_USERS_FAIL","initialState","data","error","isFetching","GET_ALBUMS_REQUEST","GET_ALBUMS_SUCCESS","GET_ALBUMS_FAIL","rootReducer","combineReducers","users","state","action","type","payload","message","albums","store","createStore","applyMiddleware","thunk","logger","Users","renderTemplate","props","length","map","item","index","className","to","id","name","this","loadUsers","React","Component","connect","dispatch","axios","get","then","catch","err","Error","Albums","userId","src","photos","thumbnailUrl","alt","title","loadAlbums","match","params","users_data","find","usr","parseInt","url","a","Promise","all","el","arr","albums_data","customStyles","content","top","left","right","bottom","marginRight","transform","padding","overlay","backgroundColor","Photos","openModal","i","setState","modalIsOpen","activeUrl","activeIndex","closeModal","nextPhoto","prevPhoto","albumId","album_data","alb","onClick","isOpen","ariaHideApp","style","onRequestClose","NotFound","App","exact","path","component","UsersContainer","PhotosContainer","AlbumsContainer","from","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1472fb9f.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const GET_USERS_REQUEST = 'GET_USERS_REQUEST'\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS'\nexport const GET_USERS_FAIL = 'GET_USERS_FAIL'\n\nexport function loadUsers() {\n  return function(dispatch) {\n    dispatch({\n      type: GET_USERS_REQUEST,\n    })\n\n    axios.get(\"https://jsonplaceholder.typicode.com/users\")\n      .then((data)=>{\n        dispatch({\n          type: GET_USERS_SUCCESS,\n          payload: data.data,\n        })\n      })\n      .catch(err=>{\n        dispatch({\n          type: GET_USERS_FAIL,\n          error: true,\n          payload: new Error('Ошибка получения даенных пользователей'),\n        })\n      })\n\n  }\n}\n","import {\n  GET_USERS_REQUEST,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAIL,\n} from '../actions/UsersActions'\n\nconst initialState = {\n  data: [],\n  error: '',\n  isFetching: false,\n}\n\n\nexport function usersReducer(state = initialState, action) {\n  \n  switch (action.type) {\n    case GET_USERS_REQUEST:\n      return { ...state, isFetching: true, error: '' }\n\n    case GET_USERS_SUCCESS:\n      return { ...state, isFetching: false, data: action.payload }\n      \n\n    case GET_USERS_FAIL:\n      return { ...state, isFetching: false, error: action.payload.message }\n\n    default:\n      return state\n  }\n}\n\n\n","import axios from \"axios\"\n\nexport const GET_ALBUMS_REQUEST = 'GET_ALBUMS_REQUEST'\nexport const GET_ALBUMS_SUCCESS = 'GET_ALBUMS_SUCCESS'\nexport const GET_ALBUMS_FAIL = 'GET_ALBUMS_FAIL'\n\nexport function loadAlbums(id) {\n  return function(dispatch) {\n    dispatch({\n      type: GET_ALBUMS_REQUEST,\n    })\n\n    let url = \"https://jsonplaceholder.typicode.com/albums?userId=\" + id;\n    axios.get(url)\n      .then(async function(data){\n        try{\n          let arr = await Promise.all(data.data.map(el=>axios.get(`https://jsonplaceholder.typicode.com/photos?albumId=${el.id}`)))\n          let albums_data = data.data.map((el,index)=>{\n            return {...el, photos : arr[index].data}\n            })\n          dispatch({\n            type: GET_ALBUMS_SUCCESS,\n            payload: albums_data,\n          })\n        } catch(err){\n          dispatch({\n            type: GET_ALBUMS_FAIL,\n            error: true,\n            payload: new Error('Ошибка получения фото'),\n          })\n        }\n        \n      })\n      .catch(err=>{\n        dispatch({\n          type: GET_ALBUMS_FAIL,\n          error: true,\n          payload: new Error('Ошибка получения данных альбомов'),\n        })\n      })\n\n  }\n}\n","import {\n  GET_ALBUMS_REQUEST,\n  GET_ALBUMS_SUCCESS,\n  GET_ALBUMS_FAIL\n} from '../actions/AlbumsActions'\n\nconst initialState = {\n  data: [],\n  error: '',\n  isFetching: false,\n}\n\nexport function albumsReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALBUMS_REQUEST:\n      return { ...state, isFetching: true, error: '' }\n\n    case GET_ALBUMS_SUCCESS:\n      return { ...state, isFetching: false, data: action.payload }\n      \n\n    case GET_ALBUMS_FAIL:\n      return { ...state, isFetching: false, error: action.payload.message }\n\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { usersReducer } from './users'\nimport { albumsReducer } from './albums'\n\nexport const rootReducer = combineReducers({\n  users: usersReducer,\n  albums: albumsReducer\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport { rootReducer } from '../reducers'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from \"react-router-dom\"\n\nexport default class Users extends React.Component {\n\n  componentDidMount(){\n    this.props.loadUsers();\n  }\n\n  renderTemplate = () => {\n\n    const {   data, error, isFetching } = this.props\n\n    if (error) {\n      return <p>Во время запроса произошла ошибка {error}</p>\n    }\n\n    if (isFetching) {\n      return <p>Загрузка...</p>\n    }\n    \n    if (data.length) {\n      return (\n      <div>\n        \n        {data.map((item,index)=>(\n        <div key={item.id}>          \n          <Link className=\"userName\" to={`/users/${item.id}`}>{item.name}</Link>\n        </div>\n        ))}         \n      </div>\n        )\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h1>Пользователи</h1>\n        {this.renderTemplate()}\n      </div>\n    )\n  }\n}\nUsers.propTypes = {\n  data: PropTypes.array.isRequired,\n  error: PropTypes.string,\n  isFetching: PropTypes.bool.isRequired,\n  loadUsers: PropTypes.func.isRequired,\n}\n\n","import { connect } from 'react-redux'\nimport  Users  from '../components/Users'\nimport { loadUsers } from '../actions/UsersActions'\n\n\n\nconst mapStateToProps = store => {\n  return {\n    data: store.users.data,\n    error: store.users.error,\n    isFetching: store.users.isFetching,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadUsers: () => dispatch(loadUsers()),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Users)\n\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default class Albums extends React.Component {\r\n  componentDidMount(){\r\n    this.props.loadAlbums(this.props.match.params.userId);\r\n  }\r\n\r\n  renderTemplate = () => {\r\n\r\n    const {  data, error, isFetching } = this.props\r\n\r\n    if (error) {\r\n      return <p>Во время запроса произошла ошибка {error}</p>\r\n    }\r\n\r\n    if (isFetching) {\r\n      return <p>Загрузка...</p>\r\n    }\r\n\r\n    \r\n    if (data.length) {\r\n      return (\r\n      <div>\r\n        {data.map((item,index)=>{return(\r\n        <div key={item.id}>          \r\n          <Link className=\"album_link\" to={`/users/${item.userId}/${item.id}`}>\r\n            <div className=\"album_card\">\r\n              <img src={`${item.photos[0].thumbnailUrl}`} alt=\"\"></img>\r\n              <div className=\"album_desc\">\r\n                <p>{item.title}</p>\r\n                <span>{item.photos.length} фотографий</span>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n        )})}\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { users_data } = this.props\r\n    return (\r\n      <div>\r\n        <div className=\"nav\">\r\n          <Link to='/users'>Users</Link>\r\n        </div>\r\n        <h1>Альбомы {users_data.length ? users_data.find(usr => usr.id === parseInt(this.props.match.params.userId,10)).name : \"\"}</h1>\r\n\r\n        {this.renderTemplate()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nAlbums.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  error: PropTypes.string,\r\n  isFetching: PropTypes.bool.isRequired,\r\n  loadAlbums: PropTypes.func.isRequired,\r\n}\r\n\r\n","import { connect } from 'react-redux'\nimport { loadAlbums } from '../actions/AlbumsActions'\nimport  Albums  from '../components/Albums'\n\n\n\nconst mapStateToProps = store => {\n  return {\n    data: store.albums.data,\n    error: store.albums.error,\n    isFetching: store.albums.isFetching,\n    users_data: store.users.data\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n     loadAlbums: (id) => dispatch(loadAlbums(id)),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Albums)\n","import React, {Suspense} from 'react'\nimport { Switch, Redirect } from \"react-router-dom\"\nimport { Img } from 'react-image'\nimport Modal from 'react-modal'\nimport PropTypes from 'prop-types'\nimport { Link } from \"react-router-dom\"\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    padding: '0px',\n  },\n  overlay: {\n    backgroundColor: 'rgba(0,0,0,0.7)',\n  },\n}\n\nexport default class Photos extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      modalIsOpen: false,\n      activeUrl: '',\n      activeIndex: -1\n    }\n  }\n\n  openModal = (url,i) => {\n    this.setState({ modalIsOpen: true, activeUrl: url, activeIndex: i })\n  }\n\n  closeModal = () => {\n    this.setState({ modalIsOpen: false, activeUrl: '', activeIndex: -1 })\n  }\n\n  nextPhoto = (arr) => {\n    const i = this.state.activeIndex;\n    if(i+1 > arr.length-1) return;\n    this.setState({ modalIsOpen: true, activeUrl: arr[i+1].url, activeIndex: i+1 })\n\n  }\n  prevPhoto = (arr) => {\n    const i = this.state.activeIndex;\n    if(i-1 < 0) return;\n    this.setState({ modalIsOpen: true, activeUrl: arr[i-1].url, activeIndex: i-1 })\n\n  }\n\n  render() {\n    const { modalIsOpen, activeUrl } = this.state\n    const { data } = this.props\n    const { albumId } = this.props.match.params\n    if(data.length===0) return(\n      <Switch>\n        <Redirect to='/users'/>\n      </Switch>)\n    const album_data = data.find(alb => alb.id === parseInt(albumId,10))\n    return(\n        <div>\n            <div className=\"nav\">\n                <Link to='/users'>Users</Link>\n                <Link to={`/users/${album_data.userId}`}>Вернуться к альбому</Link>\n            </div>\n            <h1>Фото</h1>\n            {album_data.photos.map((item,index)=>(\n                <div className=\"thumb_photo\" key={item.id}>\n                  <Suspense>\n                    <Img src={item.thumbnailUrl} onClick={()=>this.openModal(item.url,index)}/>\n                  </Suspense>\n                </div>\n            ))}\n\n            <Modal isOpen={modalIsOpen} ariaHideApp={false} style={customStyles} onRequestClose={this.closeModal}>\n              <div>\n                <div className=\"modal_photo\">\n                  <div className=\"prev_next\" onClick={()=>this.prevPhoto(album_data.photos)}><span>{\"<<\"}</span></div>\n                  <div className=\"big_img\"><img src={activeUrl} alt=\"\" /></div>\n                  <div className=\"prev_next\" onClick={()=>this.nextPhoto(album_data.photos)}><span>{\">>\"}</span></div>\n                </div>\n              </div>\n            </Modal>\n        </div>)\n  }\n}\nPhotos.propTypes = {\n  data: PropTypes.array.isRequired,\n}\n\n","import { connect } from 'react-redux'\nimport  Photos  from '../components/Photos'\n  \n  \n  const mapStateToProps = store => {\n    return {\n        data: store.albums.data,\n    }\n  }\n  \n  const mapDispatchToProps = dispatch => {\n    return {\n    }\n  }\n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Photos)","import React from 'react'\n\nexport default class NotFound extends React.Component {\n\n  render() {\n    return (\n        <h1>Not found</h1>\n    )\n  }\n}\n\n","import React from 'react'\nimport { Route, Switch, Redirect } from \"react-router-dom\"\nimport  UsersContainer  from '../containers/UsersContainer'\nimport  AlbumsContainer  from '../containers/AlbumsContainer'\nimport  PhotosContainer  from '../containers/PhotosContainer'\nimport  NotFound  from '../components/NotFound'\n\nexport default class App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route  exact path='/users' component={UsersContainer} />\n          <Route  path='/users/:userId/:albumId' component={PhotosContainer} />\n          <Route  path='/users/:userId' component={AlbumsContainer} />       \n          <Redirect exact from= '/' to='/users' />\n          <Route  component={NotFound} />\n        </Switch>\n      </div>\n    )\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './store/configureStore'\nimport App from './components/App'\nimport registerServiceWorker from './registerServiceWorker'\n\nimport './styles/index.css'\nimport './styles/users.css'\nimport './styles/albums.css'\nimport './styles/photos.css'\n\n\nReactDOM.render((\n\n  <Provider store={store}>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </Provider>),\n  document.getElementById('root')\n)\nregisterServiceWorker()\n"],"sourceRoot":""}